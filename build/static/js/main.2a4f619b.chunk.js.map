{"version":3,"sources":["assets/esper-logo.svg","components/Card.jsx","containers/dashboard/pages/Abstract.jsx","constants/endpoints.js","containers/dashboard/pages/Groups.jsx","containers/dashboard/pages/Devices.jsx","containers/dashboard/index.jsx","containers/index.jsx","components/LoginForm.jsx","containers/login/index.jsx","actions/index.js","reducers/index.js","index.jsx"],"names":["module","exports","Card","children","this","props","className","PureComponent","AbstractPage","err","constructor","name","TypeError","forEach","func","state","data","errorMessage","_loadData","length","map","d","index","key","_getChildren","token","url","_constructURL","fetch","headers","method","response","json","errors","results","message","setState","Component","API_HOST","Groups","enterprise","Devices","Dashboard","path","match","basename","to","render","connect","Home","src","LOGO_URL","alt","onClick","history","push","LoginForm","onSubmit","type","Login","_onSubmit","bind","event","preventDefault","dispatch","formData","FormData","target","URL","body","JSON","stringify","password","get","username","responseJson","user","profile","replace","initialData","action","App","exact","component","store","createStore","rootReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a4f619b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/esper-logo.0e2fe143.svg\";","// Importing react and external libraries\nimport React, { PureComponent } from 'react';\n\n// Importing styles\nimport './Card.scss';\n\nexport default class Card extends PureComponent {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"card\">\n        {children}\n      </div>\n    );\n  }\n}","// Importing react and external libraries\nimport React, { Component } from 'react';\n\n// Importing components\nimport Card from '../../../components/Card';\n\nexport default class AbstractPage extends Component {\n  constructor(props) {\n    super(props);\n    const err = {\n      100: 'Cannot create AbstractPage instances directly',\n      101: 'Must override method',\n    };\n    if (this.constructor.name === AbstractPage) {\n      throw new TypeError(err[100]);\n    }\n\n\n    ['_constructURL', '_getChildren'].forEach((func) => {\n      if (!(typeof this['_constructURL'] === 'function')) {\n        throw new TypeError(`${err[101]} _constructURL`);\n      }\n    })\n\n    this.state = {\n      data: null,\n      errorMessage: null\n    }\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  render() {\n    const { data } = this.state;\n\n    return data\n      ? data.length > 0\n        ? data.map((d, index) => (<Card key={index}>{this._getChildren(d)}</Card>))\n        : <p>Data not availble.</p>\n      : <p>Loading data..</p>;\n  }\n\n  async _loadData() {\n    const { token } = this.props.data;\n\n    const url = this._constructURL();\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': `Token ${token}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET',\n    });\n\n    const { errors, results, message } = await response.json();\n    this.setState({\n      data: results || [],\n      errorMessage: errors && message\n    })\n  }\n}\n","export const API_HOST = 'https://trqul-api.esper.cloud';\n","// Importing react\nimport React, { Fragment } from 'react';\n\n// Importing abstract page\nimport AbstractPage from './Abstract';\n\n// Importing constsnt\nimport { API_HOST } from '../../../constants/endpoints';\n\nexport default class Groups extends AbstractPage {\n\n  /**\n   * Overridding _constructURL function\n   */\n  _constructURL() {\n    const { enterprise } = this.props.data;\n    return `${API_HOST}/api/enterprise/${enterprise}/devicegroup/`;\n  }\n\n  /**\n   * Helper to constrcut card children\n   * @param {Object} d\n   */\n  _getChildren(d) {\n    return (\n      <Fragment>\n        <h3>{d.name}</h3>\n        <p>{`Device count - ${d['device_count']}`}</p>\n      </Fragment>\n    )\n  }\n}","// Importing react\nimport React, { Fragment } from 'react';\n\n// Importing abstract page\nimport AbstractPage from './Abstract';\n\n// Importing constsnt\nimport { API_HOST } from '../../../constants/endpoints';\n\nexport default class Devices extends AbstractPage {\n\n  /**\n   * Overridding _constructURL function\n   */\n  _constructURL() {\n    const { enterprise } = this.props.data;\n    return `${API_HOST}/api/enterprise/${enterprise}/device/`;\n  }\n\n  /**\n   * Helper to constrcut card children\n   * @param {Object} d\n   */\n  _getChildren(d) {\n    return (\n      <Fragment>\n        <h3>{d['device_name']}</h3>\n        <p></p>\n      </Fragment>\n    )\n  }\n}","// Importing react and external libraries\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Link, Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Importing pages\nimport Groups from './pages/Groups';\nimport Devices from './pages/Devices';\n\n// Importing styles\nimport './index.scss';\n\nclass Dashboard extends Component {\n  render() {\n    const { match: { path } } = this.props;\n    const { token } = this.props.data;\n\n    if (!token) {\n      return <Redirect to=\"/login\" />\n    }\n\n    return (\n      <Router basename={path}>\n        <div className=\"dashboard\">\n          <div className=\"sidebar\">\n            <h2>User's dashboard</h2>\n            <hr />\n            <ul>\n              <li><Link to=\"/devices\">Devices</Link></li>\n              <li><Link to=\"/groups\">Groups</Link></li>\n            </ul>\n          </div>\n          <div className=\"content\">\n            <div className=\"content-container\">\n              <Switch>\n                <Route path=\"/devices\" render={() => <Devices {...this.props} />} />\n                <Route path=\"/groups\" render={() => <Groups  {...this.props} />} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router >\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ data: state })\nexport default connect(mapStateToProps)(Dashboard)\n\n\n","// Importing react and external libraries\nimport React, { Component } from 'react';\n\n// Importing assets\nimport LOGO_URL from '../assets/esper-logo.svg';\n\n// Importing styles\nimport './index.scss';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"home-detail\">\n          <img src={LOGO_URL} alt=\"esper-logo\" />\n          <div>\n            <h2>Welcome to Esper.io</h2>\n            <button onClick={() => this.props.history.push('/login')}>Login to continue</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","// Importing react and external libraries\nimport React, { PureComponent } from 'react';\n\n// Importing styles\nimport './LoginForm.scss';\n\nexport default class LoginForm extends PureComponent {\n  render() {\n    const { onSubmit } = this.props;\n    return (\n      <form className=\"login-form\" name=\"login\" onSubmit={onSubmit}>\n        <input name=\"username\" type=\"text\" />\n        {/* <input type=\"password\" autoComplete=\"new-password \" /> */}\n        <input name=\"password\" type=\"password\" />\n        <button type=\"submit\">Login</button>\n      </form>\n    )\n  }\n}","// Importing react and external libraries\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Importing actions\nimport { setInitialData } from '../../actions';\n\n// Importing components\nimport LoginForm from '../../components/LoginForm';\n\n// Importing constant\nimport { API_HOST } from '../../constants/endpoints';\n\n// Importing assets\nimport LOGO_URL from '../../assets/esper-logo.svg';\n\n// Importing styles\nimport './index.scss';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: null,\n    }\n\n    this._onSubmit = this._onSubmit.bind(this);\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"login-detail\">\n          <img src={LOGO_URL} alt=\"esper-logo\" />\n          <h2>Login to your account</h2>\n          <div className=\"login-card\">\n            <LoginForm onSubmit={this._onSubmit} />\n            {message && <p className=\"error-text\">{message}</p>}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  /**\n   * Login to account\n   * @param {Object} event\n   */\n  async _onSubmit(event) {\n    event.preventDefault();\n    const { dispatch } = this.props;\n\n    const formData = new FormData(event.target);\n    const URL = `${API_HOST}/api/login/`;\n    const response = await fetch(URL, {\n      body: JSON.stringify({\n        password: formData.get('password'),\n        username: formData.get('username')\n      }),\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST'\n    });\n\n    const responseJson = await response.json();\n    if (responseJson.errors) {\n      return this.setState({ message: responseJson.message });\n    }\n\n    const { user: { profile: { enterprise } }, token } = responseJson;\n    dispatch(setInitialData({ enterprise, token }));\n    return this.props.history.replace('/dashboard');\n  }\n}\n\nexport default connect()(Login);","export const setInitialData = data => ({\n  data,\n  type: 'SET_INITIAL_DATA'\n})","\nconst initialData = (state = [], action) => ({ ...action.data })\n\nexport default initialData;","// Importing react and external libraries\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Importing containers\nimport Dashboard from './containers/dashboard';\nimport Home from './containers';\nimport Login from './containers/login';\n\nimport rootReducer from './reducers';\n\n// Importing styles\nimport './index.scss';\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      <Route exact path=\"/login\" component={Login} />\n    </Switch>\n  </Router>\n)\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}